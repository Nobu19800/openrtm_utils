DataBaseOutPut - 日本語
=======================


はじめに
========

クラスについては、 `APIドキュメンテーション`_ に参照してください。

.. _`APIドキュメンテーション`:
   doxygen/html/index.html

条件
====

DataBaseOutPutはOpenRTM-aist 1.0.0以上のC++版が必要です。

DataBaseOutPutは CMake_ を使います。CMake 2.8以上が必要です。

.. _CMAke:
   http://www.cmake.org

インストール
============

インストーラ
------------

Windowsのユーザはインストーラパッケージを使用してコンポーネントをインストール
することができます。これはコンポーネント及びそのすべての必要なライブラリを
インストールします。Windowsでインストールする場合、インストーラの使用を推奨してます。

- インストーラをダウンロードしてください。
- インストールを始めるためにインストーラをダブルクリックしてください。
- 指示にしたがってコンポーネントをインストールしてください。
- 環境変数の変更を適用するため、コンポーネントを使用する前にコンピューターを
  再起動する必要があるかもしれません。

DataBaseOutPutは ``DataBaseOutPutComp`` の実行をダブルクリックして実行することが
できます。あるいは、 ``DataBaseOutPut`` を初期化関数の ``DataBaseOutPutInit`` を利用して、
マネージャにロードすることができます。

ソースから
----------

ソースを使う場合は以下の手順でインストールしてください。

- ソースをダウンロードして解凍してください::

    tar -xvzf DataBaseOutPut-1.0.0.tar.gz

- 解凍されたフォルダに入ってください::

    cd DataBaseOutPut-1.0.0

- ``build`` フォルダを作ってください::

    mkdir build

- `` build`` フォルダに入ってください::

    cd build

- CMakeを実行してください::

    cmake ../

- エラーが出無い場合、makeを実行してください::

    make

- ``make install`` でコンポーネントをインストールしてください。選択された
  インストール場所に書き込み権限があるかを確認してください::

  ``make install``

- インストールする場所はccmakeを実行して ``CMAKE_INSTALL_PREFIX`` を
  設定することで変更が可能です。

    ccmake ../

ここまでで、コンポーネントが使えるようになりました。コンフィグレーションは次のセクションを
参照してください。

DataBaseOutPutは ``DataBaseOutPutComp`` を実行（ ``${prefix}/components/bin`` に
インストールされます）することでスタンドアローンモードで実行することができます。
あるいは、 ``libDataBaseOutPut.so`` を初期化関数の ``DataBaseOutPutInit`` を利用して、
マネージャにロードすることができます。このライブラリは ``${prefix}/components/lib`` 
または ``${prefix}/components/lib64`` にインストールされます。


コンフィグレーション
====================

使えるコンフィグレーションパラメータは以下のテーブルを参照
してください。

================ ================== ================ ====
パラメータ       データ型           デフォルト値     意味
================ ================== ================ ====
DataBase_Name    string             None             接続するデータベースの登録名
Table_Name       string             None             データを抽出するテーブルの名前
row_out          string             None             出力するデータのフィールドの名前
row_in           string             None             入力データと条件に合致するか調べるフィールドの名前
OutPortDataType  string             TimedStringSeq   outのデータ型
InPortDataType   string             TimedString      inのデータ型
conditional      string             0                条件式
================ ================== ================ ====

ポート
======

コンポーネントによって提供されるポートは以下のテーブルで述べられています。

=============== =========== ============================== ====
ポート名        ポート型    データ型                       意味
=============== =========== ============================== ====
in              InPort      RTC::TimedString               条件式の左辺になります。<br/>条件式の右辺はコンフィギュレーションパラメータrow_inで設定したフィールドのデータです。
out             OutPort     RTC::TimedString               抽出条件と合致したデータを全て配列に格納して出力します。
database        ServicePort DataBase::mDataBase            データベースへの接続、抽出、更新、追加、削除、テーブルの追加、削除のインターフェースです。
=============== =========== ============================== ====

例
==

例のrtc.confファイルは ``${prefix}/components/share/DataBaseOutPut/examples/conf/``
フォルダにインストールされています。

Changelog
=========


License
=======

このソフトウェアは産業技術総合研究所で開発されています。承認番号はH23PRO-????
です。このソフトウェアは Lesser General Public License (LGPL) ライセンスとして
公開されてます。COPYING.LESSER を参照してください。

