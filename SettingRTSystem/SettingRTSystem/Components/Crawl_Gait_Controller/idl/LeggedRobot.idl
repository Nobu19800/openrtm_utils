// -*- IDL -*-

#ifndef LEGGEDROBOTINTERFACE_IDL
#define LEGGEDROBOTINTERFACE_IDL

#include "BasicDataType.idl"
#include "ExtendedDataTypes.idl"
#include "ModelLoader.idl"



module WalkingRobot {
	struct Leg
	{
		RTC::Pose3D pose;
		RTC::Velocity3D velocity;
		//boolean onGround;
	};

	typedef sequence<Leg> LegList;

	struct LeggedRobot
	{
		RTC::Time tm;
		LegList leg_data;
		RTC::Velocity3D body_velocity;
		RTC::Pose3D body_pose;
	};


	
	enum SoftLimitType {
		Cube,
		Octahedron
	};

	struct LegInfo
	{
		short tipJoint;
		short baseJoint;
		sequence<RTC::Point3D> softLimitPos;
		SoftLimitType limitType;
	};
	
	typedef sequence<LegInfo> LegInfoList;

	struct RobotInfo
	{
		string manufacturer;
		string type;
		OpenHRP::LinkInfoSequence linkData;
		LegInfoList legData;
	};

	interface LeggedRobotCommonInterface_Robot
	{
		RobotInfo getRobotInfo();
		LegList getFeedbackPos();
	};




}; /* module */



#endif /* LEGGEDROBOTINTERFACE_IDL */